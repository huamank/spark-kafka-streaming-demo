version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${ZOOKEEPER_TAG}
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks: [ spark-net ]

  kafka:
    image: confluentinc/cp-kafka:${KAFKA_TAG}
    container_name: kafka
    depends_on: [ zookeeper ]
    ports:
      - "29092:29092"   # acceso desde host
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE}
    networks: [ spark-net ]

  spark-master:
    image: ${SPARK_IMAGE}
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_NO_DAEMONIZE=true
    ports:
      - "8080:8080"  # UI del master
      - "7077:7077"  # cluster master
    volumes:
      - ./spark/app:/opt/spark-app
    networks: [ spark-net ]

  spark-worker-1:
    image: ${SPARK_IMAGE}
    container_name: spark-worker-1
    depends_on: [ spark-master ]
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_NO_DAEMONIZE=true
    ports:
      - "8081:8081"
    volumes:
      - ./spark/app:/opt/spark-app
    networks: [ spark-net ]

  jupyter:
    build: ./python
    restart: always
    ports:
      - "8200:8888"
    entrypoint:
      jupyter lab --ip='0.0.0.0' --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    volumes: 
      - ./python:/user/app
    networks: [ spark-net ]

networks:
  spark-net:
    name: spark-net